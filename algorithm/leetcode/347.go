/*
	给定一个非空的整数数组，返回其中出现频率前 k 高的元素。

	你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。
	你的算法的时间复杂度必须优于 O(n log n) , n 是数组的大小。
	题目数据保证答案唯一，换句话说，数组中前 k 个高频元素的集合是唯一的。
	你可以按任意顺序返回答案。
*/

// 方法1：小顶堆
func topKFrequent(nums []int, k int) []int {

}