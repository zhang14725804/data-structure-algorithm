/*
	本题有了手续费，就要关系什么时候买卖了，因为计算所获得利润，需要考虑买卖利润可能不足以手续费的情况。

	如果使用贪心策略，就是最低值买，最高值（如果算上手续费还盈利）就卖。

	此时无非就是要找到两个点，买入日期，和卖出日期。

	买入日期：其实很好想，遇到更低点就记录一下。
	卖出日期：这个就不好算了，但也没有必要算出准确的卖出日期，只要当前价格大于（最低价格+手续费），就可以收获利润，至于准确的卖出日期，就是连续收获利润区间里的最后一天（并不需要计算是具体哪一天）。
	所以我们在做收获利润操作的时候其实有三种情况：

	情况一：收获利润的这一天并不是收获利润区间里的最后一天（不是真正的卖出，相当于持有股票），所以后面要继续收获利润。
	情况二：前一天是收获利润区间里的最后一天（相当于真正的卖出了），今天要重新记录最小价格了。
	情况三：不作操作，保持原有状态（买入，卖出，不买不卖）

	😅 没看懂
*/
func maxProfit(prices []int, fee int) int {
	res := 0
	minPrice := prices[0]
	for i := 1; i < len(prices); i++ {
		// 情况二：相当于买入
		if prices[i] < minPrice {
			minPrice = prices[i]
		}
		// 情况三：保持原有状态（因为此时买则不便宜，卖则亏本）
		if minPrice <= prices[i] && prices[i] <= minPrice+fee {
			continue
		}
		// 😅😅😅 question 计算利润，可能有多次计算利润，最后一次计算利润才是真正意义的卖出
		if prices[i] > minPrice+fee {
			res += prices[i] - (minPrice + fee)
			// 😅😅😅
			minPrice = prices[i] - fee
		}
	}
	return res
}