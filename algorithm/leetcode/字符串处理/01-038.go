/*
	给定一个正整数 n（1 ≤ n ≤ 30），输出外观数列的第 n 项。

	注意：整数序列中的每一项将表示为一个字符串。

	「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下：

	1.     1
	2.     11
	3.     21
	4.     1211
	5.     111221
	第一项是数字 1

	描述前一项，这个数是 1 即 “一个 1 ”，记作 11

	描述前一项，这个数是 11 即 “两个 1 ” ，记作 21

	描述前一项，这个数是 21 即 “一个 2 一个 1 ” ，记作 1211

	描述前一项，这个数是 1211 即 “一个 1 一个 2 两个 1 ” ，记作 111221

	思路：模拟
*/
func countAndSay(n int) string {
	s := "1"
	// 循环n-1次
	for i := 0; i < n-1; i++ {
		ns := ""
		// 遍历当前字符串，注意，后边不是j++
		for j := 0; j < len(s);  {
			// 统计相同的元素
			k := j+1
			for k<len(s) && s[k] == s[j]{
				k++
			}
			// 注意：不能直接用string(k-j)
			ns += strconv.Itoa(k-j) + string(s[j])
			// 更新k的位置
			j = k
		}
		s = ns
	}
	return s
}